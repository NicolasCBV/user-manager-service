# Follow the .env.example to see all environment variables
# used here

version: "3"

services:
  db:
    build:
      context: ./mysql
      dockerfile: Dockerfile
    hostname: mysql_db
    restart: always 
    ports:
      - "3306:3306"
    expose:
      - "3306"
    networks:
      - internal_network     
    volumes:
      - db:/var/lib/mysql
  
  redis_db:
    image: redis:7.0.5-bullseye
    restart: always
    hostname: redis
    ports:
      - "6379:6379"
    command: redis-server --loglevel warning --requirepass password 
    networks:
      - internal_network 
    volumes:
      - cache:/data
  
  app:
    image: nicolascbv/user-manager-service
    hostname: app
    environment:
      - PROJECT_NAME=User-service
      - 'CLIENT_URL=http://localhost:3000'
      - 'DATABASE_URL=mysql://root:password@mysql_db/db'
      - CACHE_HOSTNAME=redis
      - CACHE_PASSWORD=password
      - NODE_ENV=production
      - COOKIE_SECRET=secret
      - TOKEN_SECRET=secret1
      - TOKEN_EXPIRES=900000
      - REFRESH_TOKEN_KEY=secret2
      - REFRESH_TOKEN_EXPIRES=86400000
      - FORGOT_TOKEN_KEY=secret3
      - FORGOT_TOKEN_EXPIRES=120000
      - OTP_TIME=120000
      - 'FIREBASE={}'
      - 'FIREBASE_TEMPLATE_IMAGE_LINK='
      - 'FIREBASE_BUCKET='
      - HOST_SENDER=
      - HOST_PORT_SENDER=
      - EMAIL_SENDER=
      - PASS_SENDER=

    restart: always
    volumes:
      - ../user-service:/usr/app/
      - '/usr/app/node_modules'
    ports:
      - "3030:3030"
    networks:
      - internal_network
      - external_network
    depends_on:
      - db
      - redis_db
  
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx:/etc/nginx
    networks:
      - external_network
    depends_on:
      - app
      - redis_db
      - db

volumes:
  db:
    driver: local
  cache:
    driver: local

networks:
  external_network:
  internal_network:
    internal: true
